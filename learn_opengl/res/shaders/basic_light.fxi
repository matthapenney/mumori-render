#shader vertex
#version 430 core

layout(location = 0) in vec3 aPosition;
layout(location = 1) in vec2 texCoord;

out vec2 v_TexCoord;

uniform mat4 model;
uniform mat4 u_Pv;

void main()
{
	gl_Position =  u_Pv* model * vec4(aPosition.x, aPosition.y, aPosition.z, 1.0f);
	v_TexCoord = texCoord;
}

#shader fragment
#version 460 core

layout(location = 0) out vec4 fragColor;

in vec2 v_TexCoord;

uniform vec3 u_lightColor;
uniform sampler2D texture1;
uniform sampler2D normalMap;


float near = 0.1f;
float far  = 100.0f;

float LinearizeDepth(float depth)
{
	float z = depth * 2.0f - 1.0f;
	return(2.0f*near*far) / (far + near - z * (far - near));
}

void main()
{

	float depth = LinearizeDepth(gl_FragCoord.z) / far;

	// White light
	
	// ambient
	fragColor = vec4(u_lightColor, 1.0f);
	
	//fragColor = vec4(vec3(depth), 1.0f);
}